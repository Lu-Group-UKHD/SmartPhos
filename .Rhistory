library(devtools)
load_all()
devtools::check()
devtools::check()
assay_data <- matrix(rnorm(1000), nrow = 100, ncol = 10)
colnames(assay_data) <- paste0("Sample", 1:10)
rownames(assay_data) <- paste0("Gene", 1:100)
# Create sample annotations
sample_data <- data.frame(sample = colnames(assay_data), group = rep(c("A", "B"), each = 5), type = rep(c("X", "Y"), 5))
rownames(sample_data) <- colnames(assay_data)
# Create gene metadata
gene_data <- data.frame(Gene = rownames(assay_data), stat = runif(100), ID = paste0("Gene", 1:100))
rownames(gene_data) <- rownames(assay_data)
# Create SummarizedExperiment object
se <- SummarizedExperiment(assays = list(imputed = assay_data), colData = sample_data, rowData = gene_data)
se
colData(se)
data("dia_example")
dia_example
colData(dia_example)
runSmartPhos()
runSmartPhos()
runSmartPhos()
devtools::check()
runSmartPhos()
data("dia_example")
se <- dia_example[["Phosphoproteome"]]
colData(se) <- colData(dia_example)
se
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE, impute = "QRILC")
plotIntensity(newSE, color = "replicate")
pca <- stats::prcomp(t(assays(newSE)[["imputed"]]), center = TRUE, scale. = TRUE)
p <- plotPCA(pca = pca, se = newSE, color = "replicate")
p
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "1stCrtl")
plotVolcano(dea$resDE)
?performDifferentialExp
dea$resDE
plotBox(se = dea$seSub, id = 's99', symbol = "FRMD3")
plotBox(se = dea$seSub, id = 's13', symbol = "UBA6")
dia_example
colData(dia_example)
mae <- readRDS("/Users/shubhamagrawal/Documents/work/SmartPhos_app/phosphoproteomicsExplorer/maeDIA.Rds")
mae
mae1 <- mae[, mae$treatment %in% c("1stCrtl","EGF", "HGF")]
mae1
dia_example
colData(dia_example)
colData(mae1)
mae1 <- mae[, mae$treatment %in% c("1stCrtl","EGF", "HGF") && mae$timepoint %in%] c("0min", "10min","100min", "24h")
mae1 <- mae[, mae$treatment %in% c("1stCrtl","EGF", "HGF") && mae$timepoint %in%] c("0min", "10min","100min", "24h")]
mae1 <- mae[, mae$treatment %in% c("1stCrtl","EGF", "HGF") && mae$timepoint %in% c("0min", "10min","100min", "24h")]
mae1 <- mae[, mae$treatment %in% c("1stCrtl","EGF", "HGF")]
mae1 <- mae1[, mae1$timepoint %in% c("0min", "10min","100min", "24h")]
mae1
mae1 <- mae1[1:1000,]
mae1
dia_example
mae1 <- mae1[1:500,]
mae1
?saverda
?save
dia_example <- mae1
dia_example
save(dia_example, file = "dia_example.rda", compression_level = "xz")
save(dia_example, file = "dia_example.rda")
devtools::check()
library(BiocCheck)
BiocCheck::BiocCheck()
data("dia_example")
se <- dia_example[["Phosphoproteome"]]
colData(se) <- colData(dia_example)
library(SummarizedExperiment)
se <- dia_example[["Phosphoproteome"]]
colData(se) <- colData(dia_example)
se
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE, impute = "QRILC")
library(devtools)
load_all()
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE, impute = "QRILC")
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "1stCrtl")
plotVolcano(dea$resDE)
dea$resDE
plotBox(se = dea$seSub, id = 's447', symbol = "WASL")
plotBox(se = dea$seSub, id = 's156', symbol = "PALM3")
plotBox(se = dea$seSub, id = 's447', symbol = "WASL")
newSEzero <- addZeroTime(newSE, condition = "treatment", treat = "EGF", zeroTreat = "1stCrtl", timeRange = c("10min","100min", "24h"))
exprMat <- SummarizedExperiment::assay(newSEzero)
tsc <- clusterTS(x = exprMat, k = 3)
tsc
tsc <- clusterTS(x = exprMat, k = 5)
tsc
class(tsc)
newSEzero
newSE
colData(newSEzero)
colData(newSE)
tsc$cluster
assayMat <- splineFilter(assay(newSEzero), time = c("0min", "10min","100min", "24h"), df = length(unique(newSEzero))-1)
newSEzero$timepoint
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(result, type = "expression", geneID = "p18", symbol = "TMEM238", condition = "treatment", treatment = "EGF", timerange = timerange)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSEzero, type = "expression", geneID = "p18", symbol = "TMEM238", condition = "treatment", treatment = "EGF", timerange = timerange)
metadata(newSEzero)
View(newSEzero)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSEzero, type = "expression", geneID = "RBM47", symbol = "RBM47_T519", condition = "treatment", treatment = "EGF", timerange = timerange)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSE, type = "expression", geneID = "RBM47", symbol = "RBM47_T519", condition = "treatment", treatment = "EGF", timerange = timerange)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(se, type = "expression", geneID = "RBM47", symbol = "RBM47_T519", condition = "treatment", treatment = "EGF", timerange = timerange)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(se, type = "expression", geneID = "p18", symbol = "TMEM238", condition = "treatment", treatment = "EGF", timerange = timerange)
View(newSEzero)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSE, type = "expression", geneID = "s40", symbol = "RBM47_T519", condition = "treatment", treatment = "EGF", timerange = timerange)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSE, type = "expression", geneID = "s40", symbol = "RBM47_T519", condition = "treatment", treatment = "EGF", timerange = timerange)
clear
View(mae)
mae
mae <- readRDS("/Users/shubhamagrawal/Documents/work/compressed/data_readExperimentDIA_processed_TGFb_DIA.rds")
mae
colData(mae)
unique(mae$cellLine)
unique(mae$condition)
mae <- readRDS("/Users/shubhamagrawal/Documents/work/compressed/data_readExperiment_processed_EGF_DDA.rds")
colData(mae)
mae <- readRDS("/Users/shubhamagrawal/Desktop/misc/YX008009_20240219.Rds")
mae
colData(mae)
unique(mae$subjectID)
runSmartPhos()
a
class(TRUE)
runApp('inst/shiny-app')
runApp('inst/shiny-app')
load_all()
devtools::check()
?performDifferentialExp
runSmartPhos()
mae
se <- mae[["Phosphoproteome"]]
colData(se) <- colData(mae)
se
se <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE, impute = "QRILC")
se
dea <- performDifferentialExp(se = se, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "HGF")
dea <- performDifferentialExp(se = se, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "HGF", pairedTtest = TRUE)
dea
dea1 <- performDifferentialExp(se = se, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "HGF")
dea2 <- performDifferentialExp(se = se, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "HGF", pairedTtest = TRUE)
dea1$resDE
dea2$resDE
runApp('inst/shiny-app')
plotVolcano(dea1$resDE)
plotVolcano(dea2$resDE)
TRUE
a <- TRUE
a
runApp('inst/shiny-app')
dea2$resDE
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
?runGSA
?GSAsummaryTable
?select
load_all()
runApp('inst/shiny-app')
load_all()
runApp('inst/shiny-app')
runApp('inst/shiny-app')
load_all()
runApp('inst/shiny-app')
load_all()
runApp('inst/shiny-app')
devtools::check()
load_all()
?enrichDifferential
BiocCheck::BiocCheck()
load_all()
BiocCheck::BiocCheck()
data("dia_example")
se <- dda_example[["Phosphoproteome"]]
se <- dia_example[["Phosphoproteome"]]
SummarizedExperiment::colData(se) <- SummarizedExperiment::colData(dia_example)
result <- preprocessProteome(se, normalize = TRUE)
load_all()
result <- preprocessPhospho(se, normalize = TRUE)
result <- preprocessPhos(se, normalize = TRUE)
dea <- performDifferentialExp(se = result, assay = "Intensity", method = "limma", reference = "1stCrtl", target = "EGF", condition = "treatment")
dea$resDE
inGMT <- loadGSC(paste0("geneset/","Cancer_Hallmark.gmt"),type="gmt")
inGMT <- loadGSC(paste0("inst/shiny-app/geneset/","Cancer_Hallmark.gmt"),type="gmt")
resTab <- enrichDifferential(dea = dea$resDE,
type = "Pathway enrichment",
gsaMethod = "PAGE",
geneSet = inGMT,
statType = "stat",
nPerm = 200,
sigLevel = 0.05,
ifFDR = FALSE)
resTab
load_all()
devtools::check()
devtools::check()
?loadGSC
devtools::check()
devtools::check()
BiocCheck::BiocCheck()
?build
devtools::build()
knitr::opts_chunk$set(echo = TRUE)
# Load the gene set
genesetPath <- appDir <- system.file("shiny-app/geneset", package = "SmartPhos")
inGMT <- piano::loadGSC(paste0(genesetPath,"/Cancer_Hallmark.gmt"),type="gmt")
# Load the gene set
genesetPath <- appDir <- system.file("shiny-app/geneset", package = "SmartPhos")
inGMT <- piano::loadGSC(paste0("inst/shiny-app/geneset","/Cancer_Hallmark.gmt"),type="gmt")
# Load the gene set
genesetPath <- appDir <- system.file("inst/shiny-app/geneset", package = "SmartPhos")
inGMT <- piano::loadGSC(paste0(genesetPath,"/Cancer_Hallmark.gmt"),type="gmt")
load("inst/shiny-app/ptmset/human_PTM.rda")
View(ptmSetDb)
devtools::check()
BiocCheck::BiocCheck()
library(devtools)
load_all()
?normByFullProteome
load("dia_example")
load_all()
load("dia_example")
data("dia_example")
se <- dia_example[["Phosphoproteome"]]
colData(se) <- colData(dia_example)
se
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE,
impute = "QRILC")
plotIntensity(newSE, color = "replicate")
plotIntensity(se, color = "replicate")
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma", condition = "treatment", reference = "EGF", target = "HGF")
dea
plotVolcano(dea$resDE)
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma",
condition = "treatment", reference = "EGF",
target = "1stCrtl")
plotVolcano(dea$resDE)
plotBox(se = dea$seSub, id = 's447', symbol = "WASL")
newSEzero <- addZeroTime(newSE, condition = "treatment", treat = "EGF",
zeroTreat = "1stCrtl",
timeRange = c("10min","100min", "24h"))
exprMat <- SummarizedExperiment::assay(newSEzero)
tsc <- clusterTS(x = exprMat, k = 5)
tsc
class(tsc)
class(tsc$cluster)
class(tsc$plot)
timerange <- unique(newSEzero$timepoint)
plotTimeSeries(newSEzero, type = "expression", geneID = "s40",
symbol = "RBM47_T519", condition = "treatment",
treatment = "EGF", timerange = timerange)
plotIntensity(newSE, color = "replicate")
plotMissing(newSE)
pca <- stats::prcomp(t(assays(newSE)[["imputed"]]), center = TRUE, scale. = TRUE)
plotPCA(pca = pca, se = newSE, color = “replicate”)
plotPCA(pca = pca, se = newSE, color = "replicate")
p <- plotPCA(pca = pca, se = newSE, color = "replicate")
p
plotHeatmap(type = "Top variant", newSE, top = 50, annotationCol = c("replicate", "treatment"))
gc()
loadall
library(devtools)
load_all()
devtools::build()
devtools::check()
library(tools)
?build_vignettes
?buildVignette
buildVignette("vignettes/SmartPhos_Shiny.Rmd")
system.file("images", package = "SmartPhos")
library(devtools)
load_all()
system.file("images", package = "SmartPhos")
system.file("vignette", package = "SmartPhos")
system.file("vignettes", package = "SmartPhos")
system.file("image", package = "SmartPhos")
system.file("shiny-app", package = "SmartPhos")
system.file("vignettes", package = "SmartPhos")
system.file("images", package = "SmartPhos")
?file.path
file.path(system.file("vignettes", package = "SmartPhos"), "images")
file.path(system.file("vignettes", package = "SmartPhos"), "images")
clear
clear()
shiny::runApp('inst/shiny-app')
file.path(system.file("vignettes", package = "SmartPhos"), "images")
version
library(SummarizedExperiment)
library(devtools)
devtools::check()
devtools::check()
devtools::check()
load_all()
data("data/dia_example.rda")
data("data/dia_example")
load_all()
data("dia_example")
se <- dia_example[["Phosphoproteome"]]
colData(se) <- colData(dia_example)
se
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE,
impute = "QRILC")
plotIntensity(newSE, color = "replicate")
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma",
condition = "treatment", reference = "EGF",
target = "1stCrtl")
dea
plotVolcano(dea$resDE)
newSEzero <- addZeroTime(newSE, condition = "treatment", treat = "EGF",
zeroTreat = "1stCrtl",
timeRange = c("10min","100min", "24h"))
exprMat <- SummarizedExperiment::assay(newSEzero)
tsc <- clusterTS(x = exprMat, k = 5)
tsc
# Load the gene set
genesetPath <- system.file("shiny-app/geneset", package = "SmartPhos")
inGMT <- piano::loadGSC(paste0(genesetPath,"/Cancer_Hallmark.gmt"), type="gmt")
# Call the function
resTab <- enrichDifferential(dea = dea$resDE, type = "Pathway enrichment",
gsaMethod = "PAGE", geneSet = inGMT,
statType = "stat", nPerm = 200, sigLevel = 0.05,
ifFDR = FALSE)
resTab
genesetPath <- system.file("shiny-app/geneset", package = "SmartPhos")
inGMT <- piano::loadGSC(paste0(genesetPath,"/Chemical_and_Genetic_Perturbations.gmt"), type="gmt")
# Call the function
clustEnr <- clusterEnrich(clusterTab = tsc$cluster,
se = newSE, inputSet = inGMT,
filterP = 0.05,
ifFDR = FALSE)
clustEnr
ptmsetPath <- system.file("shiny-app/ptmset", package = "SmartPhos")
load(paste0(ptmsetPath, "/human_PTM.rda"))
# Call the function
clustEnr <- clusterEnrich(clusterTab = tsc$cluster, se = newSE,
inputSet = ptmSetDb, ptm = TRUE, filterP = 0.05,
ifFDR = FALSE)
clustEnr
?loadGSC
runApp('inst/shiny-app')
netw <- getDecouplerNetwork("Home_sapiens")
head(netw)
netw <- getDecouplerNetwork("Homo_sapiens")
head(netw)
load_all()
netw <- getDecouplerNetwork("Homo_sapiens")
head(netw)
netw
netw <- getDecouplerNetwork("Homo sapiens")
head(netw)
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "stat",
nPerm = 100)
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "stat",
nPerm = 200)
rlang::last_trace()
head(dea$resDE)
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "log2FC",
nPerm = 200)
mae <- readRDS("/Users/shubhamagrawal/Documents/work/SmartPhos_app/phosphoproteomicsExplorer/maeDIA.Rds")
se <- mae[["Phosphoproteome"]]
colData(se) <- colData(mae)
se
newSE <- preprocessPhos(seData = se, transform = "log2", normalize = TRUE,
impute = "QRILC")
newSE
dea <- performDifferentialExp(se = newSE, assay = "imputed", method = "limma",
condition = "treatment", reference = "EGF",
target = "1stCrtl")
head(dea$resDE)
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "log2FC",
nPerm = 200)
scoreTab
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "stat",
nPerm = 100)
scoreTab
runApp('inst/shiny-app')
netw <- getDecouplerNetwork("Homo sapiens")
scoreTab <- calcKinaseScore(dea$resDE, netw,
statType = "stat",
nPerm = 100)
knitr::opts_chunk$set(echo = TRUE)
netw <- getDecouplerNetwork("Homo sapiens")
scoreTab <- calcKinaseScore(dea$resDE, netw, statType = "stat", nPerm = 100)
load_all()
devtools::check()
devtools::check()
runSmartPhos()
?colData
runApp('~/Documents/work/SmartPhos_app/SmartPhosExplorer')
